import tkinter as tk
from tkinter import messagebox

# Book classn
class Book:
    def __init__(self, title, author):
        self.title = title
        self.author = author
        self.available = True
    def __str__(self):
        return f"{self.title} by {self.author}"

# Library Class 
class Library:
    def __init__(self):
        self.books = []

#To update a book
    def add_book(self, book):
        self.books.append(book)

#Function which return a search book
    def search_book(self, title):
        for book in self.books:
            if book.title.lower() == title.lower():
                return book
        return None

#Function which check the book is avaliable in library or not
    def borrow_book(self, title):
        book = self.search_book(title)
        if book:
            if book.available:
                book.available = False
                return f"You have borrowed {book}"
            else:
                return f"{book} is currently not available"
        else:
            return "Book not found in the library"

#Function which add the book again in the library data after return
    def return_book(self, title):
        book = self.search_book(title)
        if book:
            if not book.available:
                book.available = True
                return f"You have returned {book}"
            else:
                return f"{book} is not borrowed"
        else:
            return "Book not found in the library"

#Funciton which display the list of Books
    def display_books(self):
        if self.books:
            print("Available books:")
            for book in self.books:
                if book.available:
                    print(book)
        else:
            print("No books in the library")

#Funstion which add the new book in library data
def add_book():
    title = title_entry.get()
    author = author_entry.get()
    if title and author:
        book = Book(title, author)
        library.add_book(book)
        messagebox.showinfo("Success", "Book added successfully!")
        title_entry.delete(0, tk.END)
        author_entry.delete(0, tk.END)
    else:
        messagebox.showerror("Error", "Please enter title and author")


def search_book():
    title = title_entry.get()
    if title:
        book = library.search_book(title)
        if book:
            result_text.set(str(book))
        else:
            result_text.set("Book not found")
    else:
        messagebox.showerror("Error", "Please enter title")


def borrow_book():
    title = title_entry.get()
    if title:
        result = library.borrow_book(title)
        messagebox.showinfo("Borrow Book", result)
    else:
        messagebox.showerror("Error", "Please enter title")


def return_book():
    title = title_entry.get()
    if title:
        result = library.return_book(title)
        messagebox.showinfo("Return Book", result)
    else:
        messagebox.showerror("Error", "Please enter title")


def display_books():
    library.display_books()


def exit_program():
    root.destroy()


library = Library()

root = tk.Tk()
root.title("Library Management System")

title_label = tk.Label(root, text="Title:")
title_label.grid(row=0, column=0, padx=5, pady=5, sticky="e")
title_entry = tk.Entry(root)
title_entry.grid(row=0, column=1, padx=5, pady=5)

author_label = tk.Label(root, text="Author:")
author_label.grid(row=1, column=0, padx=5, pady=5, sticky="e")
author_entry = tk.Entry(root)
author_entry.grid(row=1, column=1, padx=5, pady=5)

add_button = tk.Button(root, text="Add Book", command=add_book)
add_button.grid(row=2, column=0, columnspan=2, pady=5)

search_button = tk.Button(root, text="Search Book", command=search_book)
search_button.grid(row=3, column=0, columnspan=2, pady=5)

borrow_button = tk.Button(root, text="Borrow Book", command=borrow_book)
borrow_button.grid(row=4, column=0, columnspan=2, pady=5)

return_button = tk.Button(root, text="Return Book", command=return_book)
return_button.grid(row=5, column=0, columnspan=2, pady=5)

display_button = tk.Button(root, text="Display Available Books", command=display_books)
display_button.grid(row=6, column=0, columnspan=2, pady=5)

exit_button = tk.Button(root, text="Exit", command=exit_program)
exit_button.grid(row=7, column=0, columnspan=2, pady=5)

result_text = tk.StringVar()
result_label = tk.Label(root, textvariable=result_text)
result_label.grid(row=8, column=0, columnspan=2, pady=5)

root.mainloop()
